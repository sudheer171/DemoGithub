<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="25191" started-at="2019-07-07T05:55:50Z" finished-at="2019-07-07T05:56:15Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="25191" started-at="2019-07-07T05:55:50Z" finished-at="2019-07-07T05:56:15Z">
      <class name="testpack.DemoTestNG">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testpack.DemoTestNG@5f150435]" name="beforeMethod" is-config="true" duration-ms="7617" started-at="2019-07-07T11:25:50Z" finished-at="2019-07-07T11:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testpack.DemoTestNG@5f150435]" name="f" duration-ms="8331" started-at="2019-07-07T11:25:58Z" data-provider="dp" finished-at="2019-07-07T11:26:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mercury]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mercury]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[oneway]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testpack.DemoTestNG@5f150435]" name="afterMethod" is-config="true" duration-ms="155" started-at="2019-07-07T11:26:06Z" finished-at="2019-07-07T11:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testpack.DemoTestNG@5f150435]" name="beforeMethod" is-config="true" duration-ms="6375" started-at="2019-07-07T11:26:06Z" finished-at="2019-07-07T11:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testpack.DemoTestNG@5f150435]" name="f" duration-ms="2553" started-at="2019-07-07T11:26:12Z" data-provider="dp" finished-at="2019-07-07T11:26:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[tripType-is Not Available]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: tripType-is Not Available
	at org.testng.Assert.fail(Assert.java:94)
	at library.ValidationScripts.radioSelectByName(ValidationScripts.java:77)
	at testpack.DemoTestNG.f(DemoTestNG.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testpack.DemoTestNG@5f150435]" name="afterMethod" is-config="true" duration-ms="129" started-at="2019-07-07T11:26:15Z" finished-at="2019-07-07T11:26:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testpack.DemoTestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
